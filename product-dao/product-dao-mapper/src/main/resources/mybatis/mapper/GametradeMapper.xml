<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mazekkkk.product.dao.mapper.GametradeMapper" >
  <resultMap id="BaseResultMap" type="cn.mazekkkk.product.dao.common.Gametrade" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="OTHER" />
    <result column="connectorNo" property="connectorno" jdbcType="OTHER" />
    <result column="partnerId" property="partnerid" jdbcType="OTHER" />
    <result column="gamesBoxId" property="gamesboxid" jdbcType="OTHER" />
    <result column="gamesId" property="gamesid" jdbcType="OTHER" />
    <result column="openId" property="openid" jdbcType="OTHER" />
    <result column="clubCardId" property="clubcardid" jdbcType="OTHER" />
    <result column="orderTime" property="ordertime" jdbcType="OTHER" />
    <result column="payTime" property="paytime" jdbcType="OTHER" />
    <result column="payMode" property="paymode" jdbcType="OTHER" />
    <result column="tradeType" property="tradetype" jdbcType="OTHER" />
    <result column="tradeState" property="tradestate" jdbcType="OTHER" />
    <result column="tradeScene" property="tradescene" jdbcType="OTHER" />
    <result column="payAmount" property="payamount" jdbcType="OTHER" />
    <result column="coin" property="coin" jdbcType="OTHER" />
    <result column="remainCoin" property="remaincoin" jdbcType="OTHER" />
    <result column="gameTimes" property="gametimes" jdbcType="OTHER" />
    <result column="discountType" property="discounttype" jdbcType="OTHER" />
    <result column="discountId" property="discountid" jdbcType="OTHER" />
    <result column="discountAmt" property="discountamt" jdbcType="OTHER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbg.generated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbg.generated
    -->
    id, connectorNo, partnerId, gamesBoxId, gamesId, openId, clubCardId, orderTime, payTime, 
    payMode, tradeType, tradeState, tradeScene, payAmount, coin, remainCoin, gameTimes, 
    discountType, discountId, discountAmt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.mazekkkk.product.dao.common.GametradeExample" >
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gametrade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.mazekkkk.product.dao.common.GametradeExample" >
    <!--
      WARNING - @mbg.generated
    -->
    delete from gametrade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.mazekkkk.product.dao.common.GametradeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from gametrade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update gametrade
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=OTHER},
      </if>
      <if test="record.connectorno != null" >
        connectorNo = #{record.connectorno,jdbcType=OTHER},
      </if>
      <if test="record.partnerid != null" >
        partnerId = #{record.partnerid,jdbcType=OTHER},
      </if>
      <if test="record.gamesboxid != null" >
        gamesBoxId = #{record.gamesboxid,jdbcType=OTHER},
      </if>
      <if test="record.gamesid != null" >
        gamesId = #{record.gamesid,jdbcType=OTHER},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=OTHER},
      </if>
      <if test="record.clubcardid != null" >
        clubCardId = #{record.clubcardid,jdbcType=OTHER},
      </if>
      <if test="record.ordertime != null" >
        orderTime = #{record.ordertime,jdbcType=OTHER},
      </if>
      <if test="record.paytime != null" >
        payTime = #{record.paytime,jdbcType=OTHER},
      </if>
      <if test="record.paymode != null" >
        payMode = #{record.paymode,jdbcType=OTHER},
      </if>
      <if test="record.tradetype != null" >
        tradeType = #{record.tradetype,jdbcType=OTHER},
      </if>
      <if test="record.tradestate != null" >
        tradeState = #{record.tradestate,jdbcType=OTHER},
      </if>
      <if test="record.tradescene != null" >
        tradeScene = #{record.tradescene,jdbcType=OTHER},
      </if>
      <if test="record.payamount != null" >
        payAmount = #{record.payamount,jdbcType=OTHER},
      </if>
      <if test="record.coin != null" >
        coin = #{record.coin,jdbcType=OTHER},
      </if>
      <if test="record.remaincoin != null" >
        remainCoin = #{record.remaincoin,jdbcType=OTHER},
      </if>
      <if test="record.gametimes != null" >
        gameTimes = #{record.gametimes,jdbcType=OTHER},
      </if>
      <if test="record.discounttype != null" >
        discountType = #{record.discounttype,jdbcType=OTHER},
      </if>
      <if test="record.discountid != null" >
        discountId = #{record.discountid,jdbcType=OTHER},
      </if>
      <if test="record.discountamt != null" >
        discountAmt = #{record.discountamt,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbg.generated
    -->
    update gametrade
    set id = #{record.id,jdbcType=OTHER},
      connectorNo = #{record.connectorno,jdbcType=OTHER},
      partnerId = #{record.partnerid,jdbcType=OTHER},
      gamesBoxId = #{record.gamesboxid,jdbcType=OTHER},
      gamesId = #{record.gamesid,jdbcType=OTHER},
      openId = #{record.openid,jdbcType=OTHER},
      clubCardId = #{record.clubcardid,jdbcType=OTHER},
      orderTime = #{record.ordertime,jdbcType=OTHER},
      payTime = #{record.paytime,jdbcType=OTHER},
      payMode = #{record.paymode,jdbcType=OTHER},
      tradeType = #{record.tradetype,jdbcType=OTHER},
      tradeState = #{record.tradestate,jdbcType=OTHER},
      tradeScene = #{record.tradescene,jdbcType=OTHER},
      payAmount = #{record.payamount,jdbcType=OTHER},
      coin = #{record.coin,jdbcType=OTHER},
      remainCoin = #{record.remaincoin,jdbcType=OTHER},
      gameTimes = #{record.gametimes,jdbcType=OTHER},
      discountType = #{record.discounttype,jdbcType=OTHER},
      discountId = #{record.discountid,jdbcType=OTHER},
      discountAmt = #{record.discountamt,jdbcType=OTHER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>