<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mazekkkk.product.dao.mapper.product.CustomProductInfoMapper">
    
    <resultMap id="BaseResultMap" type="cn.mazekkkk.product.common.vo.ProductInfoVo">
        <id column="id" property="id" jdbcType="OTHER"/>
        <result column="name" property="name" jdbcType="OTHER"/>
        <result column="curr_price" property="curPrice" jdbcType="OTHER"/>
        <result column="img_url" property="imgUrl" jdbcType="OTHER"/>
        <result column="inv_qty" property="invQty" jdbcType="OTHER"/>
    </resultMap>
    <select id="getProductInfosByIds" parameterType="cn.mazekkkk.product.common.vo.ProductInfoVo" resultMap="BaseResultMap">
       select a.id,a.name,a.cur_price,a.img_url,b.inv_qty from product_info a  left join product_inventory  b  
       on a.id=b.prod_id  where a.status=1 
       <if test="ids != null">
              and  a.id in (#{ids})
       </if>getProductInfoByCriteria
       order by a.add_time desc
    </select>

    <select id="getKitComponents" parameterType="java.lang.Integer" resultType="java.util.Map">
		SELECT xpd.prod_weight,xpd.prod_qty,xp.description,xad.community,xad.street,xp.name as prodname,xpd.weight_unit,xf.name as fname,CONCAT(pi.img_server,pi.img_path) as img_url
        FROM product_components xpd
        LEFT JOIN product_info xp ON xpd.child_id = xp.id AND xp.status = 1
        LEFT JOIN product_vender xf ON xp.vender_id = xf.id AND xf.status = 1
        LEFT JOIN common_address xad ON xp.area_id = xad.id
        LEFT JOIN product_imgs pi ON xpd.child_id = pi.prod_id AND pi.type = 4
        WHERE xpd.parent_id = #{prodId,jdbcType=VARCHAR}
		AND xpd.status = 1
    </select>

    <select id="getProductInfoRecByProductId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            pi.id,
            pi.name,
            pi.cur_price,
            pi.description,
            CASE WHEN ISNULL(cst.sale_cnt) THEN 0 ELSE cst.sale_cnt END as sale_cnt,
            CASE
            WHEN ISNULL(ci.img_server)
            OR ISNULL(ci.img_path) THEN
            ''
            ELSE
            CONCAT(ci.img_server, ci.img_path)
            END AS img_path
        FROM
        (
        SELECT
            pif.id,
            pif.pc_id,
            pif.name,
            pif.storage_time,
            pif.vender_id,
            pif.area_id,
            pif.org_price,
            pif.cur_price,
            pif.price_unit,
            pif.main_page,
            pif.u_version,
            pif. STATUS,
            pif.kit,
            pif.add_time,
            pif.orders,
            pif.description
        FROM
            shop_shelve_record ssr
            LEFT JOIN sku_info ski ON ssr.sku_id = ski.id
            LEFT JOIN product_info pio ON ski.product_id = pio.id
            LEFT JOIN product_info_rec pir ON pio.id = pir.object_id AND pir.object_type = 3
            LEFT JOIN product_info pif ON pir.object_id = pif.id
            <where>
                <if test="productId!=null">
                    pir.prod_id = #{productId}
                </if>
            </where>
        ) pi
            LEFT JOIN products_categorys pscs ON pscs.prod_id = pi.id
            LEFT JOIN product_category pc ON pscs.category_id = pc.id
            LEFT JOIN common_statis cst ON pscs.prod_id = cst.object_id
            LEFT JOIN common_imgs ci ON ci.object_type = 3 and ci.img_type = 22
                AND ci.object_id = pi.id
            ORDER  BY
                cst.sale_cnt DESC,
                cst.collect_cnt DESC,
                cst.like_cnt DESC,
                cst.comment_cnt DESC,
                pi.orders ASC
    </select>

    <select id="getProductInfoByCriteria" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DISTINCT(pi.id),
            pi.name as name,
            pi.cur_price,
            pi.description,
            CASE WHEN ISNULL(cst.sale_cnt) THEN 0 ELSE cst.sale_cnt END as sale_cnt,
            CASE WHEN ISNULL(ci.img_server) OR ISNULL(ci.img_path) THEN '' ELSE CONCAT(ci.img_server,ci.img_path) END as img_path
        FROM
            (
            SELECT
                pif.id,
                pif.pc_id,
                pif.name,
                pif.storage_time,
                pif.vender_id,
                pif.area_id,
                pif.org_price,
                pif.cur_price,
                pif.price_unit,
                pif.main_page,
                pif.u_version,
                pif. STATUS,
                pif.kit,
                pif.add_time,
                pif.orders,
                pif.description,
                ski.name as skname
            FROM
                shop_shelve_record ssr
            LEFT JOIN sku_info ski ON ssr.sku_id = ski.id
            LEFT JOIN product_info pif ON ski.product_id = pif.id
            <where>
                <if test="shopId!=null">
                    ssr.shop_id = #{shopId}
                </if>
                <if test="pcId!=null">
                    AND pif.pc_id = #{pcId}
                </if>
            </where>
            ) pi
        LEFT JOIN products_categorys pscs ON pscs.prod_id = pi.id
        LEFT JOIN product_category pc ON pscs.category_id = pc.id
        LEFT JOIN common_statis cst ON pscs.prod_id = cst.object_id
        LEFT JOIN common_imgs ci ON ci.object_type = 3 AND ci.object_id = pi.id AND ci.img_type = 22
        <where>
            pi.status = 1
            AND
            pscs.status = 1
            <choose>
                <when test="categoryId != null and brandId != null">
                    AND (pscs.category_id = #{categoryId} OR pscs.category_id = #{brandId})
                </when>
                <when test="categoryId != null">
                    AND (pscs.category_id = #{categoryId} OR pc.brand != 0)
                </when>
                <when test="brandId != null">
                    AND (pscs.category_id = #{brandId} OR pc.brand = 0)
                </when>
            </choose>
            <if test="rangeId != null">
                AND (pi.cur_price >= #{minPrice} AND pi.cur_price &lt;= #{maxPrice})
            </if>
        </where>
        <choose>
            <when test="orders != null">
                ORDER BY
                #{orders} DESC,
                pi.orders ASC
            </when>
            <otherwise>
                ORDER  BY
                cst.sale_cnt DESC,
                cst.collect_cnt DESC,
                cst.like_cnt DESC,
                cst.comment_cnt DESC,
                pi.orders ASC
            </otherwise>
        </choose>
        <if test="begin != null and end != null">
            limit #{begin},#{end}
        </if>
    </select>

    <select id="getProductInfoByCriteriaCount" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
          count(DISTINCT(pi.id)) as count
        FROM
        (
        SELECT
            pif.id,
            pif.pc_id,
            pif.name,
            pif.storage_time,
            pif.vender_id,
            pif.area_id,
            pif.org_price,
            pif.cur_price,
            pif.price_unit,
            pif.main_page,
            pif.u_version,
            pif. STATUS,
            pif.kit,
            pif.add_time,
            pif.orders,
            pif.description
        FROM
            shop_shelve_record ssr
        LEFT JOIN sku_info ski ON ssr.sku_id = ski.id
        LEFT JOIN product_info pif ON ski.product_id = pif.id
        <where>
            <if test="shop_id!=null">
                ssr.shop_id = #{shop_id}
            </if>
            <if test="pc_id!=null">
                AND pif.pc_id = #{p_id}
            </if>
        </where>
        ) pi
        LEFT JOIN products_categorys pscs ON pscs.prod_id = pi.id
        LEFT JOIN product_category pc ON pscs.category_id = pc.id
        LEFT JOIN common_statis cst ON pscs.prod_id = cst.object_id
        LEFT JOIN common_imgs ci ON ci.object_type = 3 AND ci.object_id = pi.id AND ci.img_type = 22
        <where>
            pi.status = 1
            AND
            pscs.status = 1
            <choose>
                <when test="categoryId != null and brandId != null">
                    AND (pscs.category_id = #{categoryId} OR pscs.category_id = #{brandId})
                </when>
                <when test="categoryId != null">
                    AND pscs.category_id = #{categoryId} OR pc.brand != 0
                </when>
                <when test="brandId != null">
                    AND pscs.category_id = #{brandId} OR  pc.brand = 0
                </when>
            </choose>
            <if test="rangeId != null">
                AND (pi.cur_price >= #{minPrice} AND pi.cur_price &lt;= #{maxPrice})
            </if>
        </where>
        <choose>
            <when test="orders != null">
                ORDER BY
                #{orders} DESC,
                pi.orders ASC
            </when>
            <otherwise>
                ORDER  BY
                cst.sale_cnt,
                cst.collect_cnt,
                cst.like_cnt,
                cst.comment_cnt DESC,
                pi.orders ASC
            </otherwise>
        </choose>
        <if test="begin != null and end != null">
            limit #{begin},#{end}
        </if>
    </select>

    <select id="getProductCommentById" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            ccm.id as id,
            ccm.comment as comment,
            ccm.add_time as comment_time,
            ubi.username as username,
            si.name as sku_name
        FROM
          product_info pif
        LEFT JOIN sku_info si ON pif.id = si.product_id
        LEFT JOIN common_comment ccm ON si.id = ccm.target_id
        LEFT JOIN user_base_info ubi ON ccm.user_id = ubi.id
        WHERE
          product_id = #{productId}
          <if test="commentType!=null">
             AND ccm.comment_type = #{commentType}
          </if>
        AND ccm.target_type = 1
        AND ccm.status = 1
        AND si.status = 1
    </select>

</mapper>